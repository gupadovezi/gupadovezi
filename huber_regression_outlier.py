# -*- coding: utf-8 -*-
"""Huber_regression_outlier.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SvWZao1FFnpWIWCrcFcXYYRPfN79uY2p
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression, HuberRegressor

# Dados
np.random.seed(0)
x = np.arange(1, 20)
y = x - np.random.normal(0, 1, 19)

# Adiciona outlier
x = np.append(x, 22)
y = np.append(y, 80)

# Formata para o sklearn
x_reshape = x.reshape(-1, 1)

# Regressão linear comum (OLS)
ols = LinearRegression()
ols.fit(x_reshape, y)
y_pred_ols = ols.predict(x_reshape)

# Regressão robusta (Huber)
huber = HuberRegressor()
huber.fit(x_reshape, y)
y_pred_huber = huber.predict(x_reshape)

# Plot
plt.figure(figsize=(10, 6))
plt.scatter(x, y, s=100, linewidth=2)
plt.plot(x, y_pred_ols, color='green', linewidth=4, label='Linear regression (OLS)')
plt.plot(x, y_pred_huber, color='blue', linewidth=4, label='Robust regression (Huber)')

plt.xlim(0, 25)
plt.ylim(0, 85)
plt.legend(loc='upper left', fontsize=12)
plt.title("OLS vs Regressão Robusta (Huber)")
plt.xlabel("x")
plt.ylabel("y")
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression, HuberRegressor

# Dados
np.random.seed(0)
x = np.arange(1, 20)
y = x - np.random.normal(0, 1, 19)

# Adiciona outlier
x = np.append(x, 22)
y = np.append(y, 80)

# Formata para o sklearn
x_reshape = x.reshape(-1, 1)

# Regressão linear comum (OLS)
ols = LinearRegression()
ols.fit(x_reshape, y)
y_pred_ols = ols.predict(x_reshape)

# Regressão robusta (Huber)
huber = HuberRegressor()
huber.fit(x_reshape, y)
y_pred_huber = huber.predict(x_reshape)

# Plot
plt.figure(figsize=(10, 6))
plt.scatter(x, y, s=100, linewidth=2)
plt.plot(x, y_pred_ols, color='green', linewidth=4, label='Linear regression (OLS)')
plt.plot(x, y_pred_huber, color='blue', linewidth=4, label='Robust regression (Huber)')

plt.xlim(0, 25)
plt.ylim(0, 85)
plt.legend(loc='upper left', fontsize=12)
plt.title("OLS vs Regressão Robusta (Huber)")
plt.xlabel("x")
plt.ylabel("y")
plt.grid(True)
plt.show()