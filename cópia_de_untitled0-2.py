# -*- coding: utf-8 -*-
"""Cópia de Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nfqLZ-jc6xLw2sBM9tcdgo2_albTAiEU
"""

pip install openai

!pip install --upgrade openai

from openai import OpenAI


#seta a API Key
openai.api_key = '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' #example API_KEY

messages = [
    {"role": "system", "content": "you are a helpful assistant."},
]


input_message = input('esperando input: ')
messages.append({"role": "user", "content": input_message})

while input_message != 'fim':
  response = client.chat.completions.create(
    model = "gpt-3.5-turbo",
    messages = messages,
    max_tokens = 200
  )

  answer = response['choices'][0]['message']['content']
  messages.append({"role": "assistant", "content": answer})

  print('Resposta:', answer)

  input_message = input('esperando input: ')
  messages.append({"role": "user", "content": input_message})

import requests
import json

API_KEY = "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"
MODEL_ID = "meta-llama/llama-4-scout:free"  # Example model

headers = {
    "Authorization": f"Bearer {API_KEY}",
    "HTTP-Referer": "https://openrouter.ai/meta-llama/llama-4-scout:free",  # Optional for analytics
    "X-Title": "Your App Name",  # Optional for analytics
    "Content-Type": "application/json"
}

payload = {
    "model": MODEL_ID,
    "messages": [
        {"role": "system", "content": "You are a helpful AI assistant."},
        {"role": "user", "content": "how can I treat scoliosis?"}
    ],
    "temperature": 0.7,
    "max_tokens": 1024,
    "stream": False,
    "top_p": 0.95
}

response = requests.post(
    "https://openrouter.ai/api/v1/chat/completions",
    headers=headers,
    data=json.dumps(payload)
)

print(response.json())

pip install scikit-learn

from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix, classification_report
import numpy as np

# Exemplo de valores reais e predições (substitua pelos seus dados)
y_true = [1, 0, 1, 1, 0, 1, 0, 0, 1, 0]   # rótulos reais
y_pred = [1, 0, 1, 0, 0, 1, 1, 0, 1, 0]   # rótulos previstos pelo modelo

# Cálculo das métricas
accuracy = accuracy_score(y_true, y_pred)
precision = precision_score(y_true, y_pred)
recall = recall_score(y_true, y_pred)
f1 = f1_score(y_true, y_pred)
conf_matrix = confusion_matrix(y_true, y_pred)

# Exibe os resultados
print("Matriz de Confusão:")
print(conf_matrix)
print("\nRelatório de Classificação:")
print(classification_report(y_true, y_pred))
print("Acurácia:", accuracy)
print("Precisão:", precision)
print("Recall:", recall)
print("F1-Score:", f1)

"""You are a helpful AI assistant"""