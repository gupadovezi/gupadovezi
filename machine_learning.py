# -*- coding: utf-8 -*-
"""machine_learning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SvWZao1FFnpWIWCrcFcXYYRPfN79uY2p
"""

# prompt: Create a code for using a machine learning process

import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# 1. Load and Prepare Data (Replace with your actual data loading)
# Assuming you have your features in X and target in y
# Example:
X = np.random.rand(100, 5) # 100 samples, 5 features
y = 2 * X[:, 0] + 3 * X[:, 1] + np.random.randn(100) # Simple linear relationship with noise

# 2. Split Data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Choose and Train a Model
model = LinearRegression()
model.fit(X_train, y_train)

# 4. Make Predictions
y_pred = model.predict(X_test)

# 5. Evaluate the Model
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

# You can now use the trained model to make predictions on new data
# new_data = np.array([[...]]) # Your new data
# prediction = model.predict(new_data)